version: "3.7"

services:
  traefik:
    image: "traefik:v2.2"
    restart: unless-stopped
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.http-internal.address=:8080"
      - "--entrypoints.https-admin.address=:9443"

      - "--global.checkNewVersion=false"
      - "--global.sendAnonymousUsage=false"


      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=http"
      - "--certificatesresolvers.myresolver.acme.email=nicolas@barna.be"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"

      - "--api.dashboard=true"

      - "--log.filePath=/var/log/traefik.log"
      - "--log.level=DEBUG"

      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/access.log"
      - "--accesslog.bufferingsize=100"

      #- "--providers.docker.constraints=Label(`traefik.constraint-label`,`spip`)"

    ports:
      - "80:80"
      - "443:443"
      - "127.0.0.1:8080:8080"
      - "9443:9443"
    volumes:
      - ./htpassword:/etc/traefik/htpasswd/traefik:ro
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./logs/:/var/log/
      - ./certs:/certs
      - "./letsencrypt:/letsencrypt"
    networks:
      traefik:
        aliases:
          - "udata.datahub"
          - "queueui.datahub"
          - "datahub-ecole.recette.tech"

    labels:
      - "traefik.enable=true"
      #- "traefik.constraint-label=spip"
      - "traefik.http.routers.api.rule=Host(`traefik.${DOMAIN_NAME:-recette.tech}`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.entrypoints=https-admin"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.routers.api.middlewares=auth-traefik"

      - "traefik.http.middlewares.auth-traefik.basicauth.usersfile=/etc/traefik/htpasswd/traefik"

      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}_traefik"

networks:
  traefik:
